<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.oschina.captcha</groupId>
    <artifactId>captcha</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>


    <!-- 多模块 -->
    <modules>
        <module>captcha-api</module>
        <module>captcha-web</module>
    </modules>


    <!-- 定义常量 -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <slf4j.version>1.6.6</slf4j.version>
        <logback.version>1.1.2</logback.version>
        <servlet.version>2.4</servlet.version>
        <jsp.version>2.0</jsp.version>
    </properties>


    <!-- 依赖关系管理（向下传递到子项目） -->
    <dependencyManagement>
        <dependencies>

            <!-- log begin -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.6.4</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
                <version>${servlet.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jsp-api</artifactId>
                <version>${jsp.version}</version>
                <scope>provided</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>


    <!--构建设置 -->
    <build>

        <!-- resources资源文件 -->
        <resources>
            <!--
            <resource>
                <directory>src/main/resources.${env}</directory>
            </resource>
            -->
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>

        <!-- 默认的目标，如 package  -->
        <defaultGoal>package</defaultGoal>

        <!-- 插件 -->
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.2.1</version>
                <configuration>
                    <attach>false</attach>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <!-- Banned Dependency(依赖黑名单)
             通过在命令中添加 -Denforcer.skip=true 可以跳过这个这个插件的运行
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.4.1</version>
                <executions>
                  <execution>
                    <id>enforce-banned-dependencies</id>
                    <goals>
                      <goal>enforce</goal>
                    </goals>
                    <configuration>
                      <rules>
                        <bannedDependencies>
                          <excludes>
                            <exclude>log4j:log4j</exclude>
                          </excludes>
                          <message>[Banned Dependency message]: use logback, so must exclude log4j.</message>
                        </bannedDependencies>
                      </rules>
                      <fail>true</fail>
                    </configuration>
                  </execution>
                </executions>
            </plugin>
            -->

        </plugins>
    </build>


    <!-- mvn deploy 用来将项目生成的构件分发到远程Maven仓库 , distributionManagement 分发构件的位置 -->
    <distributionManagement>
        <!--
        <snapshotRepository>
            <id>snapshots</id>
            <url>${repository.snapshots.url}</url>
        </snapshotRepository>
        -->
    </distributionManagement>


    <!-- 根据environment来修改设置 -->
    <profiles>
        <!--
        <profile>
            <id>DEV</id>
            <properties>
                <env>DEV</env>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>

        <profile>
           <id>PRE</id>
           <properties>
            <env>PRE</env>
           </properties>
          </profile>

          <profile>
           <id>LIVE</id>
           <properties>
            <env>LIVE</env>
           </properties>
          </profile>
            -->
    </profiles>

</project>